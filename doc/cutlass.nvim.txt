*cutlass.nvim.txt*  Plugin that adds a 'cut' operation separate from 'delete'.

==============================================================================
Table of Contents                             *cutlass.nvim-table-of-contents*

1. ✂️ cutlass.nvim                      |cutlass.nvim-✂️-cutlass.nvim|
  - ✨ Features                                   |cutlass.nvim-✨-features|
  - 🤔 Why would you want to do this?|cutlass.nvim-🤔-why-would-you-want-to-do-this?|
  - ⚡️ Requirements                     |cutlass.nvim-⚡️-requirements|
  - 📦 Installation                         |cutlass.nvim-📦-installation|
  - ⚙️ Configuration                   |cutlass.nvim-⚙️-configuration|
  - 🤝 Integration                           |cutlass.nvim-🤝-integration|
  - 🎉 Credits                                   |cutlass.nvim-🎉-credits|

==============================================================================
1. ✂️ cutlass.nvim                      *cutlass.nvim-✂️-cutlass.nvim*

<img
src='https://img.shields.io/badge/Made%20with%20Lua-blueviolet.svg?style=for-the-badge&logo=lua'
title=''/> <img
src='https://img.shields.io/github/workflow/status/gbprod/cutlass.nvim/Integration?style=for-the-badge'
title=''/>

Cutlass overrides the delete operations to actually just delete and not affect
the current yank.

✨ FEATURES                                       *cutlass.nvim-✨-features*

It overrides the following keys to always use the black hole register: `c`,
`cc`, `C`, `s`, `S`, `d`, `dd`, `D`, `x`, `X`.

Note that if you have already mapped these keys to something else (like we do
below with `x`) then it will not change it again.

🤔 WHY WOULD YOU WANT TO DO THIS?*cutlass.nvim-🤔-why-would-you-want-to-do-this?*

See here
<http://vimcasts.org/blog/2013/11/registers-the-good-the-bad-and-the-ugly-parts/>.
This plugin already exists <https://github.com/svermeulen/vim-cutlass> in
vimscript. I hope this version in lua will be more efficient :)

⚡️ REQUIREMENTS                         *cutlass.nvim-⚡️-requirements*


- Neovim >= 0.5.0


📦 INSTALLATION                             *cutlass.nvim-📦-installation*

Install the plugin with your preferred package manager:

PACKER <HTTPS://GITHUB.COM/WBTHOMASON/PACKER.NVIM> ~

>
    -- Lua
    use({
      "gbprod/cutlass.nvim",
      config = function()
        require("cutlass").setup({
          -- your configuration comes here
          -- or leave it empty to use the default settings
          -- refer to the configuration section below
        })
      end
    })
<


VIM-PLUG <HTTPS://GITHUB.COM/JUNEGUNN/VIM-PLUG> ~

>
    " Vim Script
    Plug 'gbprod/cutlass.nvim'
    lua << EOF
      require("cutlass").setup({
        -- your configuration comes here
        -- or leave it empty to use the default settings
        -- refer to the configuration section below
      })
    EOF
<


⚙️ CONFIGURATION                       *cutlass.nvim-⚙️-configuration*

Cutlass comes with the following defaults:

>
    {
      cut_key = nil,
      override_del = nil,
      exclude = {},
    }
<


`CUT_KEY` ~

Default : `nil`

After setting up this plugin, all of these operations will simply delete and
not cut. However, you will still want to have a key for 'cut', which you can
add by setting the `cut_key` value when setting up the plugin. (`m` or `x` are
recommended)

This will create those bindings :

>
    nnoremap m d
    xnoremap m d
    nnoremap mm dd
    nnoremap M D
<


`OVERRIDE_DEL` ~

Default : `nil`

By default, this plugin doesn’t remap the `<Del>` key to use the blackhole
register (and it will work as the old `x` key). By setting `override_del` to
true, `<Del>` key will not cut any more and not afect your current yank.

`EXCLUDE` ~

Default: `{}`

For some reason, you may doesn’t want `cutlass` to override some keys, you
can exclude mappings to be set by adding this to the exclude option using
format `"{mode}{key}"`.

Eg. If you want to exclude `s` key in normal mode, sets `exclude` option to `{
"ns" }` ; If you want to exclude `<bs>` key in select mode, sets `exclude`
option to `{ "s<bs>" }`.

🤝 INTEGRATION                               *cutlass.nvim-🤝-integration*

svermeulen/vim-yoink ~

If you have svermeulen/vim-yoink <https://github.com/svermeulen/vim-yoink>
installed, it will work seemlessly as original svermeulen/vim-cutlass
<https://github.com/svermeulen/vim-cutlass>. Just follow the integration
instructions
<https://github.com/svermeulen/vim-yoink#integration-with-vim-cutlass>.

ggandor/lightspeed.nvim ~

When you’re using plugins like ggandor/lightspeed.nvim
<https://github.com/ggandor/lightspeed.nvim>, you should not want cutlass to
remap the `s` key. You can do this using the `exclude` option:

>
    use({
      "gbprod/cutlass.nvim",
      config = function()
        require("cutlass").setup({
            exclude = { "ns", "nS" },
        })
      end
    })
<


🎉 CREDITS                                       *cutlass.nvim-🎉-credits*

This plugin is a lua version of svermeulen/vim-cutlass
<https://github.com/svermeulen/vim-cutlass> (based off of vim-easyclip
<https://github.com/svermeulen/vim-easyclip> and also Drew Neil’s ideas
<https://github.com/nelstrom/vim-cutlass>)

Credit to m00qek lua plugin template
<https://github.com/m00qek/plugin-template.nvim>

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
